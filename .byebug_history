c
@declaracion_conformidads = DeclaracionConformidad.joins(:product).where(products: { empresa_id: empresa_ids })
empresa_ids = (current_user.empresas.pluck(:id) + current_user.empresas_autorizadas.pluck(:id)).uniq
(current_user.empresas.pluck(:id) + current_user.empresas_autorizadas.pluck(:id)).uniq
n
current_user.admin?
current_user
c
@qrs = Qr.joins(:declaracion_conformidad).where(declaracion_conformidad: { empresa_id: empresa_ids })
empresa_ids = current_user.empresas.pluck(:id)
empresa_ids = (current_user.empresas.pluck(:id)
empresa_ids = (current_user.empresas.pluck(:id) + current_user.delegated_empresas.pluck(:id)).uniq
empresa_ids = (current_user.empresas.pluck(:id) + current_user.empresas_delegadas.pluck(:id)).uniq
c
@declaracion_conformidads = current_user.admin? ? DeclaracionConformidad.all : DeclaracionConformidad.where(product: current_user.products)
current_user.products
c
@declaracion_conformidad.estado
@declaracion_conformidad.fecha_emision
@declaracion_conformidad.emisor_reporte
@declaracion_conformidad.numero_reporte
 @declaracion_conformidad.tipo_procedimiento.nombre 
 @declaracion_conformidad.reglamento_tecnico.nombre
 @declaracion_conformidad.empresa.razon_social
 @declaracion_conformidad.empresa
c
declaracion_conformidad_params
c
@declaracion_conformidad.product.empresa
@declaracion_conformidad.product
c
@declaracion_conformidad.product
c
qr_code_svg = RQRCode::QRCode.new(@declaracion_conformidad.qr.url_destino).as_svg(
      offset: 0,
      color: '000',
      shape_rendering: 'crispEdges',
      module_size: 6
    )
c
 current_user&.admin?
c
super
user
current_user
c
